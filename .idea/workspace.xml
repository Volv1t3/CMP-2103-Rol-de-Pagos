<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="222885f3-1af5-4265-810f-cbfcb5a5edb7" name="Changes" comment="[Development Branch][Bug Fixes And Changes] [Santiago Arellano]&#10;&#10;The present commit, brings changes into most of the backend for the application. All the serialization methods have been written, tested, and are awaiting connection with the UI once the salary calculation methods have been polished and the field constants that will be used are done. Changes into the way most classes hold the data for the Secondary Title that an employee can hold has been altered in the Manager class. The introduction of three new constants has allowed for a streamlined environment which will guarantee a correct input, output, display and modification of data through the UI and the serialized versions of the EmployeeListWrapper.&#10;&#10;For the JSON serialization method, while constant data members with the names of the fields have not been added, they remain constant through both manager and employee instances. The only difference is the Key that points to the entire collection of data (This key could be Manager or Employee but not both). For XML, the structure has been defined polymorphic throughout the codebase for the EmployeeAbstraction package. This allows for serialization of both classes inside the same file, and deserialization from the same file. &#10;&#10;In terms of CSV serialization, a more robust check for the Titulo of Manager has been added, serialization is more standard using the aforementioned constants as well as the toCSVString() methods defined in the EmployeeAbstraction package classes. Finally, as for Binary, both serialization and deserialization have been added and work flawlessly given their integration with the Serializable Annotation interface. &#10;&#10;Overall functionality can be guaranteed. However, cohesion with the Ui cannot be guaranteed at this time as the methods, most important ones, have not been developed yet, as such, most of the integration with the TableViews, sorting, editing, and filtering have not been developed as of yet.&#10;Tested-by: Santiago Arellano &lt;santiagofarellanoj@icloud.com&gt;">
      <change afterPath="$PROJECT_DIR$/src/test/java/TestBinarySerialization.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/CustomCellFactories/ManagerCellFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CustomCellFactories/ManagerCellFactory.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/EmployeeAbstraction/EmployeeListWrapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/EmployeeAbstraction/EmployeeListWrapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/EmployeeAbstraction/Manager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/EmployeeAbstraction/Manager.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/RolDePagos/Results.csv" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/RolDePagos/Results.csv" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/RolDePagos/RolDePagosView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/RolDePagos/RolDePagosView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Serialization/ToBinarySerializer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Serialization/ToBinarySerializer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Serialization/ToCSVSerializer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Serialization/ToCSVSerializer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Serialization/ToJsonSerializer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Serialization/ToJsonSerializer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Serialization/ToXMLSerializer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Serialization/ToXMLSerializer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="CSS File" />
        <option value="package-info" />
        <option value="module-info" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Santiago Arellano &lt;santiagofarellanoj@icloud.com&gt;" />
        <option value="Santiago Arellano &lt;santiagof2204@hotmai.com&gt;" />
        <option value="Santiago Arellano" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;history&quot;: [
    {
      &quot;assignee&quot;: &quot;Volv1t3&quot;
    }
  ],
  &quot;lastFilter&quot;: {
    &quot;assignee&quot;: &quot;Volv1t3&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Volv1t3/CMP-2103-Rol-de-Pagos.git&quot;,
    &quot;accountId&quot;: &quot;28041f98-fdcd-425b-910e-5acce84e1dae&quot;
  }
}</component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2fZLRdNZyLCeN8h7CszShECY5gu" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.RolDePagosController.executor": "Run",
    "Application.RolDePagosView.executor": "Run",
    "Application.TestBinarySerialization.executor": "Run",
    "Application.TestCSVFormatting.executor": "Run",
    "Application.TestEmployeeAbstraction.executor": "Run",
    "JAR Application.RolDePagosMain-1.0-SNAPSHOT.jar.executor": "Run",
    "Java Scratch.Scratch.executor": "Run",
    "Maven.RolDePagosMain [deploy].executor": "Run",
    "OverrideImplement.generate.javadoc": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "DevelopmentBranch",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/santi/AppData/Local/SceneBuilder/SceneBuilder.exe",
    "list.type.of.created.stylesheet": "CSS",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "SDKs",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.56436783",
    "settings.editor.selected.configurable": "settings.json.schema",
    "show.migrate.to.gradle.popup": "false",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "Markdown",
      "JAVA",
      "PLAIN_TEXT"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\santi\OneDrive - Universidad San Francisco de Quito\FOURTH SEMESTER\CMP-2103 #Apps Programming In Java # Fausto Pasmay\JavaProgramming\Homework\CMP-2103-Rol-de-Pagos\RolDePagosMain\src\main\java\RolDePagos" />
    </key>
  </component>
  <component name="RunManager" selected="Application.RolDePagosView">
    <configuration name="RolDePagosController" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="RolDePagos.RolDePagosController" />
      <module name="RolDePagosMain" />
      <option name="PROGRAM_PARAMETERS" value="$Classpath$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="RolDePagos.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="software.aws.toolkits.jetbrains.core.execution.JavaAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="RolDePagosView" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="RolDePagos.RolDePagosView" />
      <module name="RolDePagosMain" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="RolDePagos.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestBinarySerialization" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="TestBinarySerialization" />
      <module name="RolDePagosMain" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestCSVFormatting" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="TestCSVFormatting" />
      <module name="RolDePagosMain" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestEmployeeAbstraction" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="TestEmployeeAbstraction" />
      <module name="RolDePagosMain" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.TestBinarySerialization" />
      <item itemvalue="Application.RolDePagosView" />
      <item itemvalue="Application.RolDePagosController" />
      <item itemvalue="Application.TestCSVFormatting" />
      <item itemvalue="Application.TestEmployeeAbstraction" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.RolDePagosView" />
        <item itemvalue="Application.TestBinarySerialization" />
        <item itemvalue="Application.TestCSVFormatting" />
        <item itemvalue="Application.RolDePagosController" />
        <item itemvalue="Application.TestEmployeeAbstraction" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="222885f3-1af5-4265-810f-cbfcb5a5edb7" name="Changes" comment="" />
      <created>1714003645591</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714003645591</updated>
      <workItem from="1714003646660" duration="117000" />
      <workItem from="1714003796096" duration="3075000" />
      <workItem from="1714006930849" duration="11477000" />
      <workItem from="1714096658845" duration="10160000" />
      <workItem from="1714247128565" duration="34677000" />
      <workItem from="1714319276457" duration="5144000" />
      <workItem from="1714328321707" duration="343000" />
      <workItem from="1714341532059" duration="395000" />
      <workItem from="1714342091077" duration="13646000" />
    </task>
    <task id="LOCAL-00001" summary="[Commit #1] [Santiago Arellano] [main Branch]&#10;&#10;Included All Work Folders, Class, File Structures, Headers, And Maven Dependencies">
      <option name="closed" value="true" />
      <created>1714006488723</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1714006488723</updated>
    </task>
    <task id="LOCAL-00002" summary="[Development Branch] [Code Changes] [Santiago Arellano]&#10;&#10;The present commit includes the general definition for the Base Employee class, it implements most methods, including string, compare, compareTo, and opens the door for further work which includes salary, salary attributes and calculations and serialization.&#10;&#10;The class is fully documented">
      <option name="closed" value="true" />
      <created>1714020672083</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1714020672083</updated>
    </task>
    <task id="LOCAL-00003" summary="[Development Branch] [Code Changes] [Santiago Arellano]&#10;&#10;The present commit includes a series of modifications that allow for CSV formatting, parsing and serializing based on multilevel composition between the main backend classes (Employee and Manager) classes, and a series of new custom Exceptions. Through these classes, the goal of serializing by CSV has been achieved and is in need of testing.">
      <option name="closed" value="true" />
      <created>1714107538823</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1714107538823</updated>
    </task>
    <task id="LOCAL-00004" summary="[Development Branch] [Code Changes] [Major Changes] [Santiago Arellano]&#10;&#10;The present commit includes advances both in the logical backend development as well as in the visual frontend development aspects. For starters, the application front end has been structured and two out of three panes have already been completed, the last to complete involves exports methods and frankly I've been working for 8 hours so Im tired. But the main adding, removing have been worked out completely. The main misssing component is the edit a record functionality which wont take much of tomorrow to Finish. Aside from this fact, the main functionality, sorting methods and UI are working flawlessly, capable of constant update and expansion upon its basic functionality">
      <option name="closed" value="true" />
      <created>1714283308584</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1714283308584</updated>
    </task>
    <task id="LOCAL-00005" summary="[Development Branch] [Code Changes] [Major Changes] [Santiago Arellano]&#10;&#10;The present commit updates and finishes the work needed for a presentable edit and generation of an employee window in the application. It can handle, adding, deleting, editing, reviewing, and sorting employees within separate lists which create a rich UI for the user needs.">
      <option name="closed" value="true" />
      <created>1714324449185</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1714324449185</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[Commit #1] [Santiago Arellano] [main Branch]&#10;&#10;Included All Work Folders, Class, File Structures, Headers, And Maven Dependencies" />
    <MESSAGE value="[Development Branch] [Code Changes] [Santiago Arellano]&#10;&#10;The present commit includes the general definition for the Base Employee class, it implements most methods, including string, compare, compareTo, and opens the door for further work which includes salary, salary attributes and calculations and serialization.&#10;&#10;The class is fully documented" />
    <MESSAGE value="[Development Branch] [Code Changes] [Santiago Arellano]&#10;&#10;The present commit includes a series of modifications that allow for CSV formatting, parsing and serializing based on multilevel composition between the main backend classes (Employee and Manager) classes, and a series of new custom Exceptions. Through these classes, the goal of serializing by CSV has been achieved and is in need of testing." />
    <MESSAGE value="[Development Branch] [Code Changes] [Major Changes] [Santiago Arellano]&#10;&#10;The present commit includes advances both in the logical backend development as well as in the visual frontend development aspects. For starters, the application front end has been structured and two out of three panes have already been completed, the last to complete involves exports methods and frankly I've been working for 8 hours so Im tired. But the main adding, removing" />
    <MESSAGE value="[Development Branch] [Code Changes] [Major Changes] [Santiago Arellano]&#10;&#10;The present commit includes advances both in the logical backend development as well as in the visual frontend development aspects. For starters, the application front end has been structured and two out of three panes have already been completed, the last to complete involves exports methods and frankly I've been working for 8 hours so Im tired. But the main adding, removing have been worked out completely. The main misssing component is the edit a record functionality which wont take much of tomorrow to Finish. Aside from this fact, the main functionality, sorting methods and UI are working flawlessly, capable of constant update and expansion upon its basic functionality" />
    <MESSAGE value="[Development Branch] [Code Changes] [Major Changes] [Santiago Arellano]&#10;&#10;The present commit updates and finishes the work needed for a presentable edit and generation of an employee window in the application. It can handle, adding, deleting, editing, reviewing, and sorting employees within separate lists which create a rich UI for the user needs." />
    <MESSAGE value="[Development Branch][Bug Fixes And Changes] [Santiago Arellano]&#10;&#10;The present commit, brings changes into most of the backend for the application. All the serialization methods have been written, tested, and are awaiting connection with the UI once the salary calculation methods have been polished and the field constants that will be used are done. Changes into the way most classes hold the data for the Secondary Title that an employee can hold has been altered in the Manager class. The introduction of three new constants has allowed for a streamlined environment which will guarantee a correct input, output, display and modification of data through the UI and the serialized versions of the EmployeeListWrapper.&#10;&#10;For the JSON serialization method, while constant data members with the names of the fields have not been added, they remain constant through both manager and employee instances. The only difference is the Key that points to the entire collection of data (This key could be Manager or Employee but not both). For XML, the structure has been defined polymorphic throughout the codebase for the EmployeeAbstraction package. This allows for serialization of both classes inside the same file, and deserialization from the same file. &#10;&#10;In terms of CSV serialization, a more robust check for the Titulo of Manager has been added, serialization is more standard using the aforementioned constants as well as the toCSVString() methods defined in the EmployeeAbstraction package classes. Finally, as for Binary, both serialization and deserialization have been added and work flawlessly given their integration with the Serializable Annotation interface. &#10;&#10;Overall functionality can be guaranteed. However, cohesion with the Ui cannot be guaranteed at this time as the methods, most important ones, have not been developed yet, as such, most of the integration with the TableViews, sorting, editing, and filtering have not been developed as of yet.&#10;Tested-by: Santiago Arellano &lt;santiagofarellanoj@icloud.com&gt;" />
    <option name="LAST_COMMIT_MESSAGE" value="[Development Branch][Bug Fixes And Changes] [Santiago Arellano]&#10;&#10;The present commit, brings changes into most of the backend for the application. All the serialization methods have been written, tested, and are awaiting connection with the UI once the salary calculation methods have been polished and the field constants that will be used are done. Changes into the way most classes hold the data for the Secondary Title that an employee can hold has been altered in the Manager class. The introduction of three new constants has allowed for a streamlined environment which will guarantee a correct input, output, display and modification of data through the UI and the serialized versions of the EmployeeListWrapper.&#10;&#10;For the JSON serialization method, while constant data members with the names of the fields have not been added, they remain constant through both manager and employee instances. The only difference is the Key that points to the entire collection of data (This key could be Manager or Employee but not both). For XML, the structure has been defined polymorphic throughout the codebase for the EmployeeAbstraction package. This allows for serialization of both classes inside the same file, and deserialization from the same file. &#10;&#10;In terms of CSV serialization, a more robust check for the Titulo of Manager has been added, serialization is more standard using the aforementioned constants as well as the toCSVString() methods defined in the EmployeeAbstraction package classes. Finally, as for Binary, both serialization and deserialization have been added and work flawlessly given their integration with the Serializable Annotation interface. &#10;&#10;Overall functionality can be guaranteed. However, cohesion with the Ui cannot be guaranteed at this time as the methods, most important ones, have not been developed yet, as such, most of the integration with the TableViews, sorting, editing, and filtering have not been developed as of yet.&#10;Tested-by: Santiago Arellano &lt;santiagofarellanoj@icloud.com&gt;" />
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>